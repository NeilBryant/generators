{"name":"Generators","tagline":"Generators for CompoundJS MVC framework","body":"## Generators\r\n\r\nGenerators for CompoundJS MVC framework. \r\n\r\n## model\r\n\r\n### command\r\n\r\n<code>compound generate model <strong>modelName</strong> [ <strong>field</strong>, ... ]</code>\r\n\r\n**modelName:** `word` in singular form\r\n\r\n**field:** `word` OR `word:datatype`, when `:datatype` is missing `String` property created\r\n\r\n### files\r\n\r\nModel generator create/patch following files and directories:\r\n\r\n    create  ./app\r\n    create  ./app/models\r\n    create  ./app/models/modelName.js\r\n    patch   ./db/schema.js\r\n\r\n### examples\r\n\r\n    compound g model user email password approved:boolean\r\n\r\nExample above will generate User model with the following fields:\r\n\r\n- email: String\r\n- password: String\r\n- approved: Boolean\r\n\r\nFollowing example will generate Post(title, content) model using coffee-script\r\n\r\n    compound g post title content --coffee\r\n\r\n## controller\r\n\r\nGenerate controller with number of actions and views\r\n\r\n### command\r\n\r\n<code>compound generate controller <strong>controllerName</strong> [<strong>actionName</strong>, ...]</code>\r\n\r\n**controllerName:** `word` (plural or singular form)\r\n\r\n**actionName:** `word` in camelcase with first lowercase letter\r\n\r\n### files\r\n\r\nModel generator create/patch following files and directories:\r\n\r\n    exists  ./app\r\n    exists  ./app/controllers\r\n    create  ./app/controllers/controllerName_controller.js\r\n    exists  ./app/helpers\r\n    create  ./app/helpers/controllerName_helper.js\r\n    exists  ./app/views\r\n    create  ./app/views/controllerName\r\n    create  ./app/views/controllerName/actionName1.ejs\r\n    create  ./app/views/controllerName/actionName2.ejs\r\n    ...\r\n    create  ./app/views/controllerName/actionNameN.ejs\r\n\r\n### examples\r\n\r\ncompound generate controller profile show edit\r\n\r\n    exists  app/\r\n    exists  app/controllers/\r\n    exists  app/helpers/\r\n    exists  app/views/\r\n    create  app/views/profile\r\n    create  app/controllers/profile_controller.js\r\n    create  app/helpers/profile_helper.js\r\n    create  app/views/profile/show.ejs\r\n    create  app/views/profile/edit.ejs\r\n\r\n## scaffold (crud)\r\n\r\nGenerate controller with CRUD actions, views, and model. Patch routes and\r\nschema. Most powerful generator for quick prototyping.\r\n\r\n### command\r\n\r\n<code>compound generate crud <strong>modelName</strong> [ <strong>field</strong>, ... ] [ <strong>options</strong> ]</code>\r\n\r\n**modelName:** `word` in singular form\r\n\r\n**field:** `word` OR `word:datatype`, when `:datatype` is missing `String` property created\r\n\r\n**options:**\r\n\r\n- *--noeval* - create noeval controllers\r\n- *--tpl* - specify templating engine (ejs and jade supported)\r\n\r\n### example\r\n\r\n    compound generate crud post title content\r\n\r\nWill generate scaffold for Post(title, content) model. Following\r\nfiles/directories will be created:\r\n\r\n    create  client-side.js\r\n    create  app/\r\n    create  app/controllers/\r\n    create  app/helpers/\r\n    create  app/views/\r\n    create  app/views/posts/\r\n    create  app/views/layouts\r\n    exists  test/\r\n    exists  test/controllers/\r\n    create  app/controllers/posts_controller.js\r\n    exists  app/\r\n    create  app/models/\r\n    create  app/models/post.js\r\n    patch   db/schema.js\r\n    create  app/views/layouts/posts_layout.ejs\r\n    create  app/views/posts/_form.ejs\r\n    create  app/views/posts/show.ejs\r\n    create  app/views/posts/new.ejs\r\n    create  app/views/posts/edit.ejs\r\n    create  app/views/posts/index.ejs\r\n    create  app/helpers/posts.js\r\n    exists  test/controllers/posts_controller_test.js\r\n    exists  test/test_helper.js\r\n    patch   config/routes.js\r\n\r\n## License (MIT)\r\n\r\n```text\r\nCopyright (C) 2011 by Anatoliy Chakkaev <mail [åt] anatoliy [døt] in>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n```\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\n```text\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}